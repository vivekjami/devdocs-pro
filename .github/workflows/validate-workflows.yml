name: Workflow Validation

on:
  push:
    paths:
      - '.github/workflows/**'
  pull_request:
    paths:
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Validate GitHub Action workflow files
      run: |
        echo "üîç Validating GitHub Action workflow files..."
        
        # Install actionlint
        bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
        
        # Run actionlint on all workflow files
        echo "Running actionlint..."
        ./actionlint -color
        
        echo "‚úÖ Actionlint validation passed!"
        
    - name: Check workflow file structure
      run: |
        echo "üîç Checking workflow file structure..."
        
        # Check that all expected workflow files exist
        required_workflows=(
          ".github/workflows/ci.yml"
          ".github/workflows/security-ci.yml"
          ".github/workflows/validate-workflows.yml"
        )
        
        for workflow in "${required_workflows[@]}"; do
          if [ -f "$workflow" ]; then
            echo "‚úÖ $workflow exists"
          else
            echo "‚ùå $workflow missing"
            exit 1
          fi
        done
        
    - name: Validate CI workflow content
      run: |
        echo "üîç Validating CI workflow content..."
        
        # Check that CI workflow has required jobs
        required_jobs=("test" "security-validation" "ai-integration-test" "workflow-summary")
        
        for job in "${required_jobs[@]}"; do
          if grep -q "$job:" .github/workflows/ci.yml; then
            echo "‚úÖ CI job '$job' found"
          else
            echo "‚ùå CI job '$job' missing"
            exit 1
          fi
        done
        
    - name: Validate Security CI workflow
      run: |
        echo "üîç Validating Security CI workflow..."
        
        # Check that Security CI has required jobs
        security_jobs=("security-audit" "security-tests" "vulnerability-scan" "compliance-check")
        
        for job in "${security_jobs[@]}"; do
          if grep -q "$job:" .github/workflows/security-ci.yml; then
            echo "‚úÖ Security job '$job' found"
          else
            echo "‚ùå Security job '$job' missing"
            exit 1
          fi
        done
        
    - name: Check environment variables
      run: |
        echo "üîç Checking required environment variables in workflows..."
        
        # Check that required env vars are defined in CI
        required_env_vars=("JWT_SECRET" "DEVDOCS_MASTER_KEY" "GEMINI_API_KEY")
        
        for var in "${required_env_vars[@]}"; do
          if grep -q "$var" .github/workflows/ci.yml; then
            echo "‚úÖ Environment variable '$var' found in CI"
          else
            echo "‚ùå Environment variable '$var' missing from CI"
            exit 1
          fi
        done
        
    - name: Validate workflow triggers
      run: |
        echo "üîç Validating workflow triggers..."
        
        # Check that workflows have proper triggers
        if grep -q "on:" .github/workflows/ci.yml && \
           grep -q "push:" .github/workflows/ci.yml && \
           grep -q "pull_request:" .github/workflows/ci.yml; then
          echo "‚úÖ CI workflow has proper triggers"
        else
          echo "‚ùå CI workflow missing required triggers"
          exit 1
        fi
        
        if grep -q "schedule:" .github/workflows/security-ci.yml; then
          echo "‚úÖ Security CI has scheduled trigger"
        else
          echo "‚ùå Security CI missing scheduled trigger"
          exit 1
        fi
        
    - name: Test workflow syntax
      run: |
        echo "üîç Testing workflow YAML syntax..."
        
        # Install yq for YAML validation
        sudo snap install yq
        
        # Validate YAML syntax of all workflow files
        for workflow in .github/workflows/*.yml; do
          if yq eval '.' "$workflow" > /dev/null; then
            echo "‚úÖ $workflow has valid YAML syntax"
          else
            echo "‚ùå $workflow has invalid YAML syntax"
            exit 1
          fi
        done
        
    - name: Generate validation report
      run: |
        echo "üìä Generating workflow validation report..."
        
        cat > workflow_validation_report.md << 'EOF'
        # Workflow Validation Report
        
        **Date:** $(date)
        **Status:** ‚úÖ PASSED
        
        ## Validated Workflows
        - ‚úÖ ci.yml - Main CI/CD pipeline
        - ‚úÖ security-ci.yml - Security-focused testing
        - ‚úÖ validate-workflows.yml - Workflow validation
        
        ## Validation Checks
        - ‚úÖ ActionLint validation passed
        - ‚úÖ All required jobs present
        - ‚úÖ Environment variables configured
        - ‚úÖ Proper workflow triggers
        - ‚úÖ Valid YAML syntax
        
        ## Summary
        All GitHub Actions workflows are properly configured and ready for use.
        EOF
        
        echo "‚úÖ Validation report generated"
        
    - name: Upload validation report
      uses: actions/upload-artifact@v4
      with:
        name: workflow-validation-report
        path: workflow_validation_report.md
